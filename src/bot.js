import { Telegraf, Markup } from "telegraf";
import db from "./db.js";

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
const token = process.env.BOT_TOKEN;
if (!token || !/^\d+:[\w-]{30,}$/.test(token)) {
  console.error("‚ùå BOT_TOKEN –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–π. –ü—Ä–æ–≤–µ—Ä—å .env –∏–ª–∏ Environment –≤ Render");
  process.exit(1);
}

// –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
const bot = new Telegraf(token);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–æ–π –±–æ—Ç –∑–∞–ø—É—â–µ–Ω
bot.telegram.getMe().then(info => {
  console.log(`‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω: @${info.username}`);
}).catch(err => {
  console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ:", err);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
bot.start(async (ctx) => {
  try {
    const user = ctx.from;

    // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    db.prepare(`
      INSERT INTO users(user_id, username)
      VALUES(?, ?)
      ON CONFLICT(user_id) DO UPDATE SET username = excluded.username
    `).run(user.id, user.username || "");

    // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å inline WebApp-–∫–Ω–æ–ø–∫–æ–π
    await ctx.reply(
      "–ü—Ä–∏–≤–µ—Ç üëã\n–ù–∞–∂–º–∏, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ü–ª–∞–Ω–µ—Ä.",
      Markup.inlineKeyboard([
        Markup.button.webApp("üöÄ –û—Ç–∫—Ä—ã—Ç—å –ü–ª–∞–Ω–µ—Ä", process.env.WEBAPP_URL)
      ])
    );

  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ /start:", err);
    await ctx.reply("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.");
  }
});

export default bot;
